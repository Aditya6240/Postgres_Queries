--------------------- Understand Relations-----------------------------------


create table customers(
cust_id Serial Primary key,
cust_name varchar(100) NOT NULL
);

INSERT INTO customers(cust_name)
    values('Raju'),('sham'),('Paul'),('Alex');

	
create table orders(
   ord_id serial primary key,
   ord_date date not null,
   price Numeric not null,
   cust_id Integer not null,
   Foreign key (cust_id) References customers(cust_id)
) n ;


INSERT INTO orders(ord_date, cust_id, price)
    values
	    ('2024-01-01',1,250.00),
		 ('2023-08-01',1,300.00),
		  ('2022-01-07',2,250.00),
		   ('2022-01-07',3,2250.00),
		    ('2021-01-07',2,1250.00);
-----------------joins----------------------------------------------


SELECT *FROM customers CROSS JOIN orders;


SELECT c.cust_name, COUNT(o.ord_id) FROM customers c
INNER JOIN
orders o
ON C.cust_id=o.cust_id
   GROUP BY cust_name;

SELECT c.cust_name, SUM(o.price) FROM customers c
INNER JOIN
orders o
ON C.cust_id=o.cust_id
   GROUP BY cust_name;


SELECT * FROM customers c
Left JOIN
orders o
ON C.cust_id=o.cust_id; 

SELECT * FROM customers c
Right JOIN
orders o
ON C.cust_id=o.cust_id; 




-------------Many to Many example------------------
CREATE TABLE courses (
    c_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    fee NUMERIC NOT NULL
);

CREATE TABLE students (
    s_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL
);

CREATE TABLE enrollment (
    enrollment_id SERIAL PRIMARY KEY,
    s_id INT NOT NULL,
    c_id INT NOT NULL,
    enrollment_date DATE NOT NULL,
    FOREIGN KEY (s_id) REFERENCES students(s_id),
    FOREIGN KEY (c_id) REFERENCES courses(c_id)
);
INSERT INTO students (name)
VALUES 
 ('Raju'), ('Sham'), ('Paul'), ('Alex');



INSERT INTO customers (cust_name)
VALUES 
 ('Raju'), ('Sham'), ('Paul'), ('Alex');


 INSERT INTO courses (name, fee)
VALUES
('Mathematics', 500.00),
('Physics', 600.00),
('Chemistry', 700.00);


 
INSERT INTO enrollment (s_id, c_id, enrollment_date)
VALUES
(1, 1, '2024-01-01'), -- Raju enrolled in Mathematics
(1, 2, '2024-01-15'), -- Raju enrolled in Physics
(2, 1, '2024-02-01'), -- Sham enrolled in Mathematics
(2, 3, '2024-02-15'), -- Sham enrolled in Chemistry
(3, 3, '2024-03-25'); -- Alex enrolled in Chemistry


SELECT
    e.enrollment_id,
    s.name AS student_name,
    c.name AS course_name,
    c.fee,
    e.enrollment_date
FROM
    enrollment e
JOIN
    students s ON e.s_id = s.s_id
JOIN
    courses c ON e.c_id = c.c_id;



